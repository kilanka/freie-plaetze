version: "3"

services:
  db:
    image: postgres:14.2
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpass
    ports:
      - 5432:5432

  db-e2e:
    image: postgres:14.2
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpass
    ports:
      - 5433:5432

  imgproxy:
    image: darthsim/imgproxy:v3.6.0
    volumes:
      - ./backend/images:/images
    environment:
      IMGPROXY_KEY: 42
      IMGPROXY_SALT: 42
      IMGPROXY_LOCAL_FILESYSTEM_ROOT: /images
      IMGPROXY_BASE_URL: local:///
      IMGPROXY_DEVELOPMENT_ERRORS_MODE: "true"
    ports:
      - 8081:8080

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      xpack.security.enabled: "false"
    ports:
      - 9200:9200

  geo-resolver:
    build:
      context: .
      dockerfile: ./geo-resolver/Dockerfile
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - 3001:3001

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    depends_on:
      - db
    volumes:
      - ./backend/images:/images
    environment:
      APP_ENV: staging
      DATABASE_URL: postgres://pguser:pgpass@db:5432/pguser
      GEO_RESOLVER_URL: http://geo-resolver:3001
      IMAGES_PATH: /images
    ports:
      - 3000:3000

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    depends_on:
      - backend
    ports:
      - 8080:8080
